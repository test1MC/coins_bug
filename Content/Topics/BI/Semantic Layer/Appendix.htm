<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-gb" MadCap:lastBlockDepth="5" MadCap:lastHeight="832.3334" MadCap:lastWidth="602" MadCap:conditions="COINS.PrintOnly" style="mc-master-page: url('../../../Resources/MasterPages/OtherTopics.flmsp');">
    <head>
        <link href="../../../Resources/TableStyles/COINS.css" rel="stylesheet" MadCap:stylesheetType="table" /><title></title>
        <link href="../../../Resources/Stylesheets/OnlineHelp.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1 class="Heading1" MadCap:autonum="1 ">Appendix</h1>
        <h2 class="Heading2" MadCap:autonum="1.1 ">Progress Calculation Syntax Mapped to Excel</h2>
        <table style="mc-table-style: url('../../../Resources/TableStyles/COINS.css');" class="TableStyle-COINS" cellspacing="0">
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Description</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Progress</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>Excel</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Data reference</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>{&amp;table}.field</p>
                    <p>The {&amp;table} is completely standard (it refers to the temp table created by the semantic layer). The ‘field’ is any field already described in the semantic layer field list.</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>Cell reference </p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Spaces</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Spaces are normally required between Operators</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>No spaces between Operators</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Carriage Returns</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Do not use within a formula Statement</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>Do not use within a Cell formula</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Full stop</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Do not use within a formula Statement except to separate Table.Field</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>Do not use within a Cell formula unless required</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Comma</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Do not use within a formula Statement, unless required by the Statement syntax</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>Use only if required by the formula syntax</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Text qualifier</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Use single quotes: ‘text’</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>Use double quotes: “text”</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>= sign</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Used only in a Condition Test</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>Used to define a formula in a Cell as well as a Condition Test</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Operators + - * /</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Table.Field + Table.Field&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Spaces are required around operators&#160; +&#160; -&#160; * /&#160;&#160;&#160; </p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>=CellReference+CellReference&#160;&#160;&#160;&#160;&#160;&#160; No spaces</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Brackets ( )</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>No spaces needed after opening bracket or before closing bracket</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>No spaces</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Condition Test</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>(IF [logical_test] THEN [value_if_true] ELSE [value_if_false])&#160;&#160;&#160; Spaces are required</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>IF([logical_test],[value_if_true],[value_if_false]) No spaces</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Logical Test</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Table.Field = [value]&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Usual operators can apply: =, &lt;, &lt;=, &gt;, &gt;=, &lt;&gt;</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>CellReference=[value]&#160;&#160;&#160;&#160;&#160;&#160; Usual operators can apply: =, &lt;, &lt;=, &gt;, &gt;=, &lt;&gt;</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>AND</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>([logical_test1] AND [logical_test2] AND [logical_test3])</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>AND(logical_test1, logical_test2, logical_test3)</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>OR</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>([logical_test1] OR [logical_test2] OR [logical_test3])</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>OR(logical_test1, logical_test2, logical_test3)</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Text Strings:</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>‘textvalue’ can be derived from a field reference or Statement that returns a text value</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>“textvalue” can be derived from a cell reference or formula that returns a text value</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Text String: STRING</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Convert number / date to String: STRING (value , “format”)</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>TEXT(value,”format”)</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Text Strings: Addition</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>textvalue1 + textvalue2 + textvalue3</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>CONCATENATE(textvalue1,textvalue2,textvalue3)</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Text Strings: Substring</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>SUBSTRING (textvalue, x, y)</p>
                    <p>Where x is the starting character, y is number of characters (same as Excel)</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>MID(textvalue,x,y) </p>
                    <p>Where x is the starting character, y is number of characters</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Text Strings: Length</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>LENGTH (textvalue)</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>LEN(textvalue)</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Text Strings: Right</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>SUBSTRING(textvalue,LENGTH(textvalue) – x + 1)</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>RIGHT(textvalue,x) where x is number of characters</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Value: ROUND</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>ROUND (dec_value, x)&#160;&#160;&#160;&#160;&#160; where x is number of decimal places</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>ROUND(dec_value,x) where x is number of dec. places</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Value: TRUNCATE</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>TRUNCATE (dec_value, x)&#160;&#160;&#160;&#160; where x is precision of decimal places</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>TRUNC(dec_value,x) where x is precision of dec. places</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Value: ABSOLUTE</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>ABSOLUTE (value)&#160;&#160;&#160;&#160;&#160;&#160; Always returns a positive value</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>ABS(value)&#160;&#160;&#160;&#160;&#160;&#160; Always returns a positive value</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Date: DAY,MONTH, YEAR</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>DAY date ,&#160; MONTH (date) or YEAR (date) returns the relevant numeric value </p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>DAY(date) , MONTH(date) or YEAR(date)</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Date: TODAY</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>TODAY&#160;&#160; returns Today’s date</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>TODAY&#160;&#160; returns Today’s date</p>
                </td>
            </tr>
            <tr class="TableStyle-COINS-Body-Body1">
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>Date: WEEKDAY</p>
                </td>
                <td class="TableStyle-COINS-BodyE-Column1-Body1">
                    <p>WEEKDAY (date)&#160; returns 1 for Sunday, through to 7 for Saturday</p>
                </td>
                <td class="TableStyle-COINS-BodyD-Column1-Body1">
                    <p>WEEKDAY (date)&#160; returns 1 for Sunday to 7 for Saturday</p>
                </td>
            </tr>
        </table>
        <p>&#160;</p>
    </body>
</html>